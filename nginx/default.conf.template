# generated 2021-01-15, Mozilla Guideline v5.6, nginx 1.19.6, OpenSSL 1.1.1d, intermediate configuration, no OCSP
# https://ssl-config.mozilla.org/#server=nginx&version=1.19.6&config=intermediate&openssl=1.1.1d&ocsp=false&guideline=5.6

# redirect all http traffic to https (except for .well-known)
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # challenge for getting letsencrypt certificates using the acme.sh tool
    location /.well-known/acme-challenge/ {
        alias /var/www/acme.sh/.well-known/acme-challenge/;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# don't log successful requests (2xx and 3xx)
map $status $loggable {
    ~^[23]  0;
    default 1;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    access_log /var/log/nginx/access.log combined if=$loggable;

    ssl_certificate /etc/nginx/ssl/certs/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/certs/key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_dhparam /etc/nginx/ssl/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        proxy_pass http://${UIHOST}:${UIPORT};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto https;
    }
}
