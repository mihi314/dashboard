version: "3.8"

volumes:
  grafana-storage:
  pgdata:
  certs:
  acme.sh-state:
  acme.sh-webroot:

services:
  updater:
    build:
      context: updater
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DASH_PGHOST=postgres
      - DASH_PGPORT=5432
      - DASH_PGDATABASE=${DASH_PGDATABASE:?err}
      - DASH_PGUSER=${DASH_PGUSER:?err}
      - DASH_PGPASSWORD=${DASH_PGPASSWORD:?err}
      - AGSI_API_KEY=${AGSI_API_KEY:?err}
      - WORKFLOWY_SESSION_ID=${WORKFLOWY_SESSION_ID:?err}
    depends_on:
      - postgres

  grafana:
    build:
      context: grafana
      dockerfile: Dockerfile
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${DASH_GF_SECURITY_ADMIN_PASSWORD:?err}
      - GF_SERVER_DOMAIN=${DASH_DOMAIN:-localhost}
      - DASH_PGPASSWORD_GRAFANA=${DASH_PGPASSWORD_GRAFANA:?err}
      - GF_DATE_FORMATS_FULL_DATE=dd DD.MM.YYYY HH:mm:ss
      - GF_DATE_FORMATS_INTERVAL_SECOND=HH:mm:ss
      - GF_DATE_FORMATS_INTERVAL_MINUTE=HH:mm
      - GF_DATE_FORMATS_INTERVAL_HOUR=dd DD.MM. HH:mm
      - GF_DATE_FORMATS_INTERVAL_DAY=dd DD.MM.
      - GF_DATE_FORMATS_INTERVAL_MONTH=YYYY-MM
      - GF_DATE_FORMATS_INTERVAL_YEAR=YYYY
      - GF_AUTH_LOGIN_MAXIMUM_INACTIVE_LIFETIME_DURATION=120M
      - GF_AUTH_LOGIN_MAXIMUM_LIFETIME_DURATION=120M
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${DASH_SMTP_HOST}
      - GF_SMTP_USER=${DASH_SMTP_USER}
      - GF_SMTP_PASSWORD=${DASH_SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${DASH_SMTP_FROM_ADDRESS}
      - GF_SMTP_FROM_NAME="Grafana Dashboard"
    ports:
      - 127.0.0.1:3000:3000
    depends_on:
      - postgres

  postgres:
    build:
      context: postgres
      dockerfile: Dockerfile
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      # Config options depending on the environment (the ones applying everywhere should go into the config file)
      - -c
      - log_statement=${DASH_PG_LOGLEVEL:-none}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      # For creating the inital database
      - POSTGRES_DB=${DASH_PGDATABASE:?err}
      - POSTGRES_USER=${DASH_PGUSER:?err}
      - POSTGRES_PASSWORD=${DASH_PGPASSWORD:?err}
      # For more convenient invocation of psql
      - PGDATABASE=${DASH_PGDATABASE:?err}
      - PGUSER=${DASH_PGUSER:?err}
      - PGPASSWORD=${DASH_PGPASSWORD:?err}
    ports:
      # Forward ports for development and debugging. But only listen on localhost to make exposing them publicly by
      # accident a bit harder.
      - 127.0.0.1:5432:5432

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    volumes:
      - certs:/etc/nginx/ssl/certs
      - acme.sh-webroot:/var/www/acme.sh
    restart: unless-stopped
    environment:
      - GRAFANA_HOST=grafana
      - GRAFANA_PORT=3000
      - DOMAIN=${DASH_DOMAIN:-localhost}
    ports:
      - 4080:80
      - 4443:443
    depends_on:
      - grafana

  # refreshes the letsencrypt certificate every 60 days
  acme.sh:
    image: neilpang/acme.sh:2.8.8
    command: daemon
    volumes:
      # these paths are tightly coupled with the generate-initial-ssl-cert task
      - certs:/certs
      - acme.sh-state:/acme.sh
      - acme.sh-webroot:/acme.sh-webroot
    restart: unless-stopped
